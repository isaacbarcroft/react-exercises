{"version":3,"sources":["components/BogPostForm/BlogPostForm","components/ContactForm/ContactForm.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","useState","blogs","setBlogs","title","setTitle","body","setBody","counter","setCounter","useEffect","localStorage","setItem","JSON","stringify","action","onSubmit","event","preventDefault","newBlog","id","type","name","value","placeholder","onChange","target","App","html","selection","setSelection","BlogPostForm","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAe,G,MAAA,IAA0B,0C,cC4C1BA,MA1Cf,WACA,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAyBJ,mBAAS,IAAlC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA8BN,mBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KA2BA,OAzBAC,qBAAU,WACNC,aAAaC,QAAQ,QAASC,KAAKC,UAAUZ,MAC7C,CAACA,IAwBD,mCACA,uBAAMa,OAAO,GAAGC,SAvBpB,SAAsBC,GAClBA,EAAMC,iBACN,IAAMC,EAAU,CACZC,GAAIZ,EACJJ,QACAE,QAEJH,EAAS,GAAD,mBAAKD,GAAL,CAAYiB,KACpBV,EAAWD,EAAU,GACrBH,EAAS,IACTE,EAAQ,KAaR,UACI,uBAAOc,KAAK,OAAOC,KAAK,QAAQC,MAAOnB,EAAOoB,YAAY,QAAQC,SAX1E,SAA2BR,GACvBZ,EAASY,EAAMS,OAAOH,UAWlB,uBAAOF,KAAK,OAAOC,KAAK,OAAOC,MAAOjB,EAAMkB,YAAY,OAAOC,SARvE,SAA0BR,GACtBV,EAAQU,EAAMS,OAAOH,UAQjB,wBAAQF,KAAK,SAAb,0BCTOM,MAvBf,WACA,IAEIC,EAFJ,EAAkC3B,mBAAS,YAA3C,mBAAO4B,EAAP,KAAkBC,EAAlB,KASE,OAJAF,EADe,aAAdC,EACM,cAACE,EAAD,IAEA,cAAC,EAAD,IAGL,sBAAKC,UAAU,MAAf,UACE,mCACE,wBAAQX,KAAK,SAASY,QAAS,kBAAMH,EAAa,aAAlD,uBACA,wBAAQT,KAAK,SAASY,QAAS,kBAAMH,EAAa,gBAAlD,6BAGHF,MCXUM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e7a2d5f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/BlogPostForm.b477018d.bin\";","import { useState, useEffect } from \"react\";\n\nfunction ContactForm(){\nconst [blogs , setBlogs] = useState([]);\nconst [title , setTitle] = useState('');\nconst [body , setBody] = useState('');\nconst [counter, setCounter] = useState(0);\n\nuseEffect(() => {\n    localStorage.setItem('blogs', JSON.stringify(blogs));\n }, [blogs]);\n\nfunction handleSubmit(event){\n    event.preventDefault();\n    const newBlog = {\n        id: counter,\n        title,\n        body,\n    }\n    setBlogs([...blogs, newBlog]);\n    setCounter(counter + 1); \n    setTitle('');\n    setBody('');\n}\n\nfunction handleTitleChange(event){\n    setTitle(event.target.value)\n}\n\nfunction handleBodyChange(event){\n    setBody(event.target.value)\n}\n\nreturn (\n    <>\n    <form action=\"\" onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"title\" value={title} placeholder=\"title\" onChange={handleTitleChange} />\n        <input type=\"text\" name=\"body\" value={body} placeholder=\"body\" onChange={handleBodyChange} />\n        <button type=\"submit\">Submit</button>\n    </form>\n</>\n)\n}\n\nexport default ContactForm;","\nimport { useState } from 'react';\nimport './App.css';\nimport BlogPostForm from './components/BogPostForm/BlogPostForm';\nimport ContactForm from './components/ContactForm/ContactForm';\n\nfunction App() {\nconst [selection, setSelection] = useState('blogfrom')\n\nlet html;\n\nif(selection === 'blogForm') {\n  html = <BlogPostForm />\n} else {\n  html = <ContactForm />\n}\n  return (\n    <div className=\"App\">\n      <header>\n        <button type=\"button\" onClick={() => setSelection('blogfrom')}>Blog Form</button>\n        <button type=\"button\" onClick={() => setSelection('contactForm')}>Contact Form</button>\n      </header>\n\n    {html}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}